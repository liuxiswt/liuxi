1.五层协议？
(1)应用层：应用层协议是应用进程间的通信和交互的规则。eg: 域名系统DNS，支持万维网应用的HTTP协议，支持电子邮件的 SMTP协议,文件系统FTP
(2)运输层：负责向两台主机进程之间的通信提供通用的数据传输服务。eg:传输控制协议 TCP(面向连接的，可靠的数据传输服务)、
用户数据协议 UDP(无连接的，尽最大努力的数据传输服务,不保证数据传输的可靠性)
(3)网络层：选择合适的网间路由和交换结点， 确保数据及时传送。eg: IP 协议
(4)链路层:  数据链路层将网络层交下来的 IP 数据报组装成帧，在两个相邻节点间的链路上传送帧。
每一帧包括数据和必要的控制信息（如同步信息，地址信息，差错控制等）。
(5)物理层:  实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异。


2.TCP相关？
(1)三次握手：目的是建立可靠的通信信道，双方确认自己与对方的发送与接收是正常的。
客户端–发送带有 SYN 标志的数据包–一次握手–服务端
服务端–发送带有 SYN/ACK 标志的数据包–二次握手–客户端
客户端–发送带有带有 ACK 标志的数据包–三次握手–服务端
(2)四次挥手：
客户端-发送一个 FIN，用来关闭客户端到服务器的数据传送
服务器-收到这个 FIN，它发回一 个 ACK，确认序号为收到的序号加1 。和 SYN 一样，一个 FIN 将占用一个序号
服务器-关闭与客户端的连接，发送一个FIN给客户端
客户端-发回 ACK 报文确认，并将确认序号设置为收到序号加1

3.TCP,UDP 协议的区别？
(1)TCP面向连接，UDP无连接
(2)TCP传输可靠，UDP不可靠
(3)TCP字节流形式传输，UDP数据报文段
(4)TCP传输效率慢，UDP传输效率快
(5)TCP所需资源较多，UDP所需资源较少
(6)TCP首部字节20-60，UDP首部字节8个
(7)TCP应用于要求通信数据可靠的场景，如文件传输，邮件。UDP应用于通信速度搞的场景，如视频、音频

4.TCP 协议如何保证可靠传输?
应用数据被分割成 TCP 认为最适合发送的数据块。
TCP 给发送的每一个包进行编号，接收方对数据包进行排序，把有序数据传送给应用层。
校验和： TCP 将保持它首部和数据的检验和。这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。
如果收到段的检验和有差错，TCP 将丢弃这个报文段和不确认收到此报文段。
TCP 的接收端会丢弃重复的数据。
流量控制： TCP 连接的每一方都有固定大小的缓冲空间，TCP的接收端只允许发送端发送接收端缓冲区能接纳的数据。
当接收方来不及处理发送方的数据，能提示发送方降低发送的速率，防止包丢失。TCP 使用的流量控制协议是可变大小的滑动窗口协议。 （TCP 利用滑动窗口实现流量控制）
拥塞控制： 当网络拥塞时，减少数据的发送。
ARQ协议： 也是为了实现可靠传输的，它的基本原理就是每发完一个分组就停止发送，等待对方确认。在收到确认后再发下一个分组。
超时重传： 当 TCP 发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。如果不能及时收到一个确认，将重发这个报文段。

5.浏览器中输入url地址 ->> 显示主页的过程?
DNS解析
TCP连接
发送HTTP请求
服务器处理请求并返回HTTP报文
浏览器解析渲染页面
连接结束

6.HTTP协议的长连接(1.1)和短连接(1.0)，实质上是TCP协议的长连接和短连接   Connection:keep-alive

7.HTTP是不保存状态的协议,如何保存用户状态?
Session 的主要作用就是通过服务端记录用户的状态。Cookie 中附加一个 Session ID 来方式来跟踪。

8.Cookie 被禁用怎么办？
URL 重写把 Session ID 直接附加在URL路径的后面。

9. HTTP 和 HTTPS 的区别？
端口 ：HTTP的URL由“http://”起始且默认使用端口80，而HTTPS的URL由“https://”起始且默认使用端口443。
安全性和资源消耗： HTTP协议运行在TCP之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份。
HTTPS是运行在SSL/TLS之上的HTTP协议，SSL/TLS 运行在TCP之上。所有传输的内容都经过加密，加密采用对称加密，
但对称加密的密钥用服务器方的证书进行了非对称加密。所以说，HTTP 安全性没有 HTTPS高，但是 HTTPS 比HTTP耗费更多服务器资源。
对称加密：密钥只有一个，加密解密为同一个密码，且加解密速度快，典型的对称加密算法有DES、AES等；
非对称加密：密钥成对出现（且根据公钥无法推知私钥，根据私钥也无法推知公钥），加密解密使用不同密钥（公钥加密需要私钥解密，私钥加密需要公钥解密），
相对对称加密速度较慢，典型的非对称加密算法有RSA、DSA等。

10.HTTPS = HTTP + TLS（一是传输内容加密、二是服务端的身份认证）
TLS使用的密码技术：
伪随机数生成器：秘钥生成随机性，更难被猜测
对称密码：对称密码使用的秘钥就是由伪随机数生成，相较于非对称密码，效率更高
消息认证码：保证消息信息的完整性、以及验证消息信息的来源
公钥密码：证书技术使用的就是公钥密码
数字签名：验证证书的签名，确定由真实的某个 CA 颁发
证书：解决公钥的真实归属问题，降低中间人攻击概率

11.对称加密：DES、3DES、AES、DESX、Blowfish、RC4、RC5、RC6
非对称加密：RSA、DSA（数字签名用）、ECC（移动设备用）、Diffie-Hellman、El Gamal。
散列(hash)加密：MD2、MD4、MD5、HAVAL、SHA、SHA-1、HMAC、HMAC-MD5、HMAC-SHA1。

